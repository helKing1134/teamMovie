<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 1단계 DB접속 정보 등록 -->
	 <bean class="org.apache.commons.dbcp2.BasicDataSource" id="dataSource">
	 	<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	 	<property name="username" value="MOVIE"/>
	 	<property name="password" value="MOVIE"/>
	 </bean>
	 
 	<!-- 2단계 : mybatis에서 제공하는 sql명령어 실행을 위한 도구 등록 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 위에서 만든 db접속정보와 mybatis관련 설정 및 매퍼파일 위치 지정 -->
		<property name="dataSource" ref="dataSource"/> <!-- db접속정보연결 -->
		<!-- configLocation : config 파일 위치 / classpath : classes 폴더 최상단 경로  -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- mapperLocations : mapper파일 위치 / *-mapper : *전체 와일드카드  -->
		<property name="mapperLocations" value="classpath:mappers/*-mapper.xml"/>
	</bean>
	
	
	<!-- 3단계 : sqlSessionFactory를 이용하여 sqlSessionTemplate 도구 등록(sqlSession) -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- sqlSessionFactory 넣어주기 -->
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 파일 업로드 처리용 MultipartResolver 등록  -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="100000000"/> <!-- 업로드 파일 용량 제한 -->
		<property name="maxInMemorySize" value="100000000"/> <!--임시 메모리 보고나 크기 설정  -->
	</bean>
	
	<!--  
		트랜잭션 사용 설정
		@Transactional 어노테이션 활성화 작업
		트랜잭션 매니저 도구 등록
	-->
	<tx:annotation-driven/>	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
  	<!-- 비지니스 로직 처리=> @Service, @repository -->
	<!--namespaces에서 context 체크  -->
	<context:component-scan base-package="com.kh.teammovie" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	
</beans>



