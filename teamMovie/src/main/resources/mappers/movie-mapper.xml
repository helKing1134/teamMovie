<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 비어있을 수 없음 필수입력 요소 (해당 mapper를 부르는 별칭)-->
<mapper namespace="movieMapper">

	
	<resultMap type="Movie" id="movieResultMap">
		<result property="movieId" column="MOVIE_ID" />
		<result property="typeId" column="TYPE_ID" />
		<result property="movieTitle" column="MOVIE_TITLE" />
		<result property="description" column="DESCRIPTION" />
		<result property="director" column="DIRECTOR" />
		<result property="duration" column="DURATION" />
		<result property="rating" column="RATING" />
		<result property="releaseDate" column="RELEASE_DATE" />
		<result property="status" column="STATUS" />
		<result property="posterPath" column="POSTER_PATH" />
		<collection property="genres" ofType="Genre">
			<result property="genreId" column="GENRE_ID"/>
			<result property="genreName" column="GENRE_NAME"/>
		</collection>
		<collection property="actors" ofType="Actor">
			<result property="actorId" column="ACTOR_ID"/>
			<result property="actorName" column="ACTOR_NAME"/>
		</collection>
		<collection property="reviews" ofType="Review">
			<result property="reviewId" column="REVIEW_ID"/>
			<result property="memberNo" column="MEMBER_NO"/>
			<result property="movieId" column="MOVIE_ID"/>
			<result property="reviewContent" column="REVIEW_CONTENT"/>
			<result property="reviewRating" column="reviewRating"/>
			<collection property="criteria" ofType="Criterion">
				<result property="criteriaId" column="CRITERIA_ID"/>
				<result property="criteria" column="CRITERIA"/>
			</collection>
		</collection>
		<collection property="stillCuts" ofType="StillCut">
			<result property="stillCutId" column="STILLCUT_ID"/>
			<result property="fileLevel" column="FILE_LEVEL"/>
			<result property="stillCutFile" column="STILLCUT_FILE"/>
		</collection>
	</resultMap>
	
	<select id="movieListAll" resultMap="movieResultMap">
		SELECT MOVIE_ID
			  ,MOVIE_TITLE
			  ,DESCRIPTION
			  ,RATING
			  ,POSTER_PATH
			  ,RELEASE_DATE
		FROM MOVIE
		WHERE STATUS IN ('S','P')
		ORDER BY RELEASE_DATE DESC
	</select>
	
	<select id="searchOfAllMovie" resultMap="movieResultMap">
		SELECT MOVIE_ID
		      ,MOVIE_TITLE
		      ,DESCRIPTION
		      ,RATING
		      ,POSTER_PATH
		      ,RELEASE_DATE
		FROM MOVIE
		JOIN MOVIE_GENRE USING (MOVIE_ID)
		JOIN GENRE USING (GENRE_ID)
		JOIN MOVIE_ACTOR USING (MOVIE_ID)
		JOIN ACTOR USING (ACTOR_ID)
		WHERE
		<choose>
			<when test="condition == 'title'">
				LOWER(MOVIE_TITLE)
			</when>
			<when test="condition == 'director'">
				LOWER(DIRECTOR)
			</when>
			<when test="condition == 'actor'">
				LOWER(ACTOR_NAME)
			</when>
			<otherwise>
				LOWER(GENRE_NAME)
			</otherwise>
		</choose>
		LIKE '%' || LOWER(#{keyword}) || '%'
		AND STATUS IN ('S','P')
		GROUP BY MOVIE_ID,MOVIE_TITLE,DESCRIPTION,RATING,POSTER_PATH,RELEASE_DATE
		ORDER BY RELEASE_DATE DESC
	</select>
	
	<select id="screeningMovieList" resultMap="movieResultMap">
		SELECT MOVIE_ID
		      ,MOVIE_TITLE
		      ,DESCRIPTION
		      ,RATING
		      ,POSTER_PATH
		      ,RELEASE_DATE
		FROM MOVIE
		WHERE STATUS = 'S'
		ORDER BY RELEASE_DATE DESC   
	</select>
	
	<select id="searchOfScreeningMoive" resultMap="movieResultMap">
		SELECT MOVIE_ID
		      ,MOVIE_TITLE
		      ,DESCRIPTION
		      ,RATING
		      ,POSTER_PATH
		      ,RELEASE_DATE
		FROM MOVIE
		JOIN MOVIE_GENRE USING (MOVIE_ID)
		JOIN GENRE USING (GENRE_ID)
		JOIN MOVIE_ACTOR USING (MOVIE_ID)
		JOIN ACTOR USING (ACTOR_ID)
		WHERE
		<choose>
			<when test="condition == 'title'">
				LOWER(MOVIE_TITLE)
			</when>
			<when test="condition == 'director'">
				LOWER(DIRECTOR)
			</when>
			<when test="condition == 'actor'">
				LOWER(ACTOR_NAME)
			</when>
			<otherwise>
				LOWER(GENRE_NAME)
			</otherwise>
		</choose>
		LIKE '%' || LOWER(#{keyword}) || '%'
		AND STATUS = 'S'
		GROUP BY MOVIE_ID,MOVIE_TITLE,DESCRIPTION,RATING,POSTER_PATH,RELEASE_DATE
		ORDER BY RELEASE_DATE DESC
	</select>
	
	<select id="comingMovieList" resultMap="movieResultMap">
		SELECT MOVIE_ID
		      ,MOVIE_TITLE
		      ,DESCRIPTION
		      ,RATING
		      ,POSTER_PATH
		      ,RELEASE_DATE
		FROM MOVIE
		WHERE STATUS = 'P'
		ORDER BY RELEASE_DATE DESC   
	</select>
	
	<select id="searchOfComingMovie" resultMap="movieResultMap">
		SELECT MOVIE_ID
		      ,MOVIE_TITLE
		      ,DESCRIPTION
		      ,RATING
		      ,POSTER_PATH
		      ,RELEASE_DATE
		FROM MOVIE
		JOIN MOVIE_GENRE USING (MOVIE_ID)
		JOIN GENRE USING (GENRE_ID)
		JOIN MOVIE_ACTOR USING (MOVIE_ID)
		JOIN ACTOR USING (ACTOR_ID)
		WHERE
		<choose>
			<when test="condition == 'title'">
				LOWER(MOVIE_TITLE)
			</when>
			<when test="condition == 'director'">
				LOWER(DIRECTOR)
			</when>
			<when test="condition == 'actor'">
				LOWER(ACTOR_NAME)
			</when>
			<otherwise>
				LOWER(GENRE_NAME)
			</otherwise>
		</choose>
		LIKE '%' || LOWER(#{keyword}) || '%'
		AND STATUS = 'P'
		GROUP BY MOVIE_ID,MOVIE_TITLE,DESCRIPTION,RATING,POSTER_PATH,RELEASE_DATE
		ORDER BY RELEASE_DATE DESC
	</select>
	
	
	
	
	
	<select id="movieDetail" resultMap="movieResultMap">
		SELECT *
		FROM MOVIE
		JOIN MOVIE_GENRE USING (MOVIE_ID)
		JOIN GENRE USING (GENRE_ID)
		JOIN MOVIE_ACTOR USING (MOVIE_ID)
		JOIN ACTOR USING (ACTOR_ID)
		JOIN STILLCUT USING (MOVIE_ID)
		WHERE MOVIE_ID = #{mvId}
	</select>
	
	
	
	<resultMap type="Review" id="reviewResultMap">
		<result property="reviewId" column="REVIEW_ID"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="movieId" column="MOVIE_ID"/>
		<result property="reviewContent" column="REVIEW_CONTENT"/>
		<result property="reviewId" column="REVIEW_ID"/>
		<result property="reviewRating" column="REVIEW_RATING"/>
		<result property="reviewWriter" column="MEMBER_ID"/>
		<collection property="criteria" ofType="Criterion">
			<result property="criteriaId" column="CRITERIA_ID"/>
			<result property="criteria" column="CRITERIA"/>
		</collection>
	</resultMap>
	
	<select id="getReviews" resultMap="reviewResultMap">
		SELECT REVIEW_ID
			  ,REVIEW_CONTENT
		      ,REVIEW_RATING
		      ,MEMBER_ID
		      ,CRITERIA
		FROM MOVIE
		JOIN REVIEW USING(MOVIE_ID)
		JOIN REVIEW_CRITERIA USING(REVIEW_ID)
		JOIN CRITERIA USING(CRITERIA_ID)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE MOVIE_ID = #{mvId}
		ORDER BY CREATE_DATE
	</select>
	
	<select id="getStillCuts" resultMap="movieResultMap">
		SELECT STILLCUT_FILE
		FROM MOVIE
		JOIN STILLCUT USING(MOVIE_ID)
		WHERE MOVIE_ID = #{mvId}
	</select>
	

</mapper>